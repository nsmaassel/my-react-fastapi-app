{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "metadata": {
    "_generator": {
      "name": "bicep",
      "version": "0.33.93.31351",
      "templateHash": "236632986913012562"
    }
  },
  "parameters": {
    "location": {
      "type": "string",
      "defaultValue": "[resourceGroup().location]"
    },
    "environmentName": {
      "type": "string"
    },
    "containerRegistryName": {
      "type": "string"
    },
    "customDomainName": {
      "type": "string",
      "defaultValue": ""
    },
    "deployGitHubAction": {
      "type": "bool",
      "defaultValue": true
    },
    "githubRepositoryUrl": {
      "type": "string",
      "defaultValue": ""
    }
  },
  "resources": [
    {
      "type": "Microsoft.ContainerRegistry/registries",
      "apiVersion": "2023-07-01",
      "name": "[parameters('containerRegistryName')]",
      "location": "[parameters('location')]",
      "sku": {
        "name": "Premium"
      },
      "properties": {
        "adminUserEnabled": true
      }
    },
    {
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
      "apiVersion": "2023-01-31",
      "name": "[format('{0}-identity', parameters('environmentName'))]",
      "location": "[parameters('location')]"
    },
    {
      "type": "Microsoft.OperationalInsights/workspaces",
      "apiVersion": "2022-10-01",
      "name": "[format('{0}-logs', parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "properties": {
        "sku": {
          "name": "PerGB2018"
        },
        "retentionInDays": 30,
        "features": {
          "enableLogAccessUsingOnlyResourcePermissions": true
        }
      }
    },
    {
      "type": "Microsoft.Insights/components",
      "apiVersion": "2020-02-02",
      "name": "[format('{0}-insights', parameters('environmentName'))]",
      "location": "[parameters('location')]",
      "kind": "web",
      "properties": {
        "Application_Type": "web",
        "publicNetworkAccessForIngestion": "Enabled",
        "publicNetworkAccessForQuery": "Enabled"
      }
    },
    {
      "type": "Microsoft.App/managedEnvironments",
      "apiVersion": "2023-05-01",
      "name": "[parameters('environmentName')]",
      "location": "[parameters('location')]",
      "properties": {
        "appLogsConfiguration": {
          "destination": "log-analytics",
          "logAnalyticsConfiguration": {
            "customerId": "[reference(resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-logs', parameters('environmentName'))), '2022-10-01').customerId]",
            "sharedKey": "[listKeys(resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-logs', parameters('environmentName'))), '2022-10-01').primarySharedKey]"
          }
        },
        "zoneRedundant": true,
        "workloadProfiles": [
          {
            "name": "Consumption",
            "workloadProfileType": "Consumption"
          }
        ]
      },
      "dependsOn": [
        "[resourceId('Microsoft.OperationalInsights/workspaces', format('{0}-logs', parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2023-05-01",
      "name": "backend",
      "location": "[parameters('location')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', parameters('environmentName'))))]": {}
        }
      },
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('environmentName'))]",
        "configuration": {
          "ingress": {
            "external": true,
            "targetPort": 8000,
            "customDomains": "[if(not(empty(parameters('customDomainName'))), createArray(createObject('name', format('api.{0}', parameters('customDomainName')), 'bindingType', 'SniEnabled')), createArray())]"
          },
          "registries": [
            {
              "server": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-07-01').loginServer]",
              "identity": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', parameters('environmentName')))]"
            }
          ]
        },
        "template": {
          "containers": [
            {
              "name": "backend",
              "image": "[format('{0}/backend:latest', reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-07-01').loginServer)]",
              "env": [
                {
                  "name": "ENVIRONMENT",
                  "value": "production"
                },
                {
                  "name": "WORKERS_COUNT",
                  "value": "4"
                },
                {
                  "name": "TIMEOUT",
                  "value": "120"
                },
                {
                  "name": "KEEP_ALIVE",
                  "value": "75"
                },
                {
                  "name": "APPLICATIONINSIGHTS_CONNECTION_STRING",
                  "value": "[reference(resourceId('Microsoft.Insights/components', format('{0}-insights', parameters('environmentName'))), '2020-02-02').ConnectionString]"
                }
              ],
              "resources": {
                "cpu": "[json('1.0')]",
                "memory": "2Gi"
              },
              "probes": [
                {
                  "type": "liveness",
                  "httpGet": {
                    "path": "/api/health",
                    "port": 8000
                  },
                  "initialDelaySeconds": 15,
                  "periodSeconds": 30
                },
                {
                  "type": "readiness",
                  "httpGet": {
                    "path": "/api/health",
                    "port": 8000
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 10
                }
              ]
            }
          ],
          "scale": {
            "minReplicas": 2,
            "maxReplicas": 10,
            "rules": [
              {
                "name": "http-rule",
                "http": {
                  "metadata": {
                    "concurrentRequests": "100"
                  }
                }
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName'))]",
        "[resourceId('Microsoft.Insights/components', format('{0}-insights', parameters('environmentName')))]",
        "[resourceId('Microsoft.App/managedEnvironments', parameters('environmentName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', parameters('environmentName')))]"
      ]
    },
    {
      "type": "Microsoft.App/containerApps",
      "apiVersion": "2023-05-01",
      "name": "frontend",
      "location": "[parameters('location')]",
      "identity": {
        "type": "UserAssigned",
        "userAssignedIdentities": {
          "[format('{0}', resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', parameters('environmentName'))))]": {}
        }
      },
      "properties": {
        "managedEnvironmentId": "[resourceId('Microsoft.App/managedEnvironments', parameters('environmentName'))]",
        "configuration": {
          "ingress": {
            "external": true,
            "targetPort": 80,
            "customDomains": "[if(not(empty(parameters('customDomainName'))), createArray(createObject('name', parameters('customDomainName'), 'bindingType', 'SniEnabled')), createArray())]"
          },
          "registries": [
            {
              "server": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-07-01').loginServer]",
              "identity": "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', parameters('environmentName')))]"
            }
          ]
        },
        "template": {
          "containers": [
            {
              "name": "frontend",
              "image": "[format('{0}/frontend:latest', reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-07-01').loginServer)]",
              "env": [
                {
                  "name": "NODE_ENV",
                  "value": "production"
                },
                {
                  "name": "VITE_API_URL",
                  "value": "[if(not(empty(parameters('customDomainName'))), format('https://api.{0}', parameters('customDomainName')), format('https://{0}', reference(resourceId('Microsoft.App/containerApps', 'backend'), '2023-05-01').configuration.ingress.fqdn))]"
                }
              ],
              "resources": {
                "cpu": "[json('1.0')]",
                "memory": "2Gi"
              },
              "probes": [
                {
                  "type": "liveness",
                  "httpGet": {
                    "path": "/health",
                    "port": 80
                  },
                  "initialDelaySeconds": 10,
                  "periodSeconds": 30
                },
                {
                  "type": "readiness",
                  "httpGet": {
                    "path": "/health",
                    "port": 80
                  },
                  "initialDelaySeconds": 5,
                  "periodSeconds": 10
                }
              ]
            }
          ],
          "scale": {
            "minReplicas": 2,
            "maxReplicas": 10,
            "rules": [
              {
                "name": "http-rule",
                "http": {
                  "metadata": {
                    "concurrentRequests": "100"
                  }
                }
              }
            ]
          }
        }
      },
      "dependsOn": [
        "[resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName'))]",
        "[resourceId('Microsoft.App/containerApps', 'backend')]",
        "[resourceId('Microsoft.App/managedEnvironments', parameters('environmentName'))]",
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', parameters('environmentName')))]"
      ]
    },
    {
      "condition": "[and(parameters('deployGitHubAction'), not(empty(parameters('githubRepositoryUrl'))))]",
      "type": "Microsoft.ManagedIdentity/userAssignedIdentities/federatedIdentityCredentials",
      "apiVersion": "2023-01-31",
      "name": "[format('{0}/{1}', format('{0}-identity', parameters('environmentName')), 'github-action')]",
      "properties": {
        "audiences": [
          "api://AzureADTokenExchange"
        ],
        "issuer": "https://token.actions.githubusercontent.com",
        "subject": "[format('repo:{0}:environment:production', replace(replace(parameters('githubRepositoryUrl'), 'https://github.com/', ''), '//', '/'))]"
      },
      "dependsOn": [
        "[resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', parameters('environmentName')))]"
      ]
    }
  ],
  "outputs": {
    "acrLoginServer": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ContainerRegistry/registries', parameters('containerRegistryName')), '2023-07-01').loginServer]"
    },
    "frontendUrl": {
      "type": "string",
      "value": "[if(not(empty(parameters('customDomainName'))), format('https://{0}', parameters('customDomainName')), format('https://{0}', reference(resourceId('Microsoft.App/containerApps', 'frontend'), '2023-05-01').configuration.ingress.fqdn))]"
    },
    "backendUrl": {
      "type": "string",
      "value": "[if(not(empty(parameters('customDomainName'))), format('https://api.{0}', parameters('customDomainName')), format('https://{0}', reference(resourceId('Microsoft.App/containerApps', 'backend'), '2023-05-01').configuration.ingress.fqdn))]"
    },
    "managedIdentityPrincipalId": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.ManagedIdentity/userAssignedIdentities', format('{0}-identity', parameters('environmentName'))), '2023-01-31').principalId]"
    },
    "appInsightsConnectionString": {
      "type": "string",
      "value": "[reference(resourceId('Microsoft.Insights/components', format('{0}-insights', parameters('environmentName'))), '2020-02-02').ConnectionString]"
    }
  }
}